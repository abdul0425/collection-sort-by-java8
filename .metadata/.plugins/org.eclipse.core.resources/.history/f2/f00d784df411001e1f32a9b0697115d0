package map;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

public class StudentUtils {

//	Creating Map
	static Map<Integer, Student> getStudentMap() {
		Map<Integer, Student> map = new HashMap<>();
		map.put(101, new Student("Rivu", "Baruipur"));
		map.put(201, new Student("Sasthi", "Malda"));
		map.put(301, new Student("Madhu", "Guntoor"));
		map.put(401, new Student("Abdul", "Barwadih"));
		map.put(501, new Student("Kishan", "Dhanbad"));
		map.put(601, new Student("Rishu", "Kolkata"));
		map.put(701, new Student("Anjani", "Patna"));
		map.put(801, new Student("Akhil", "Patna"));
		map.put(901, new Student("Prashant", "Marchela"));
		map.put(111, new Student("Rohan", "Gurgaon"));
		map.put(121, new Student("Keerthana", "Bangalore"));

		return map;
	}

//	Sorting using traditional way
	static void sortByStudentName(Map<Integer, Student> map) {
		ArrayList<Entry<Integer, Student>> list = new ArrayList<>(map.entrySet());

		Comparator<Entry<Integer, Student>> comp = new Comparator<Map.Entry<Integer, Student>>() {

			@Override
			public int compare(Entry<Integer, Student> o1, Entry<Integer, Student> o2) {
				// TODO Auto-generated method stub
				return o1.getValue().getStdName().compareTo(o2.getValue().getStdName());
			}
		};

		Collections.sort(list, comp);

		for (Entry<Integer, Student> entry : list) {
			System.out.println(entry.getKey() + "  :  " + entry.getValue());
		}
	}

//	Sorting using lambda expression
	static void sortByStudentAddress(Map<Integer, Student> map) {
		ArrayList<Entry<Integer, Student>> list = new ArrayList<>(map.entrySet());

		Comparator<Entry<Integer, Student>> comp = (o1, o2) -> o1.getValue().getAddress()
				.compareTo(o2.getValue().getAddress());

		Collections.sort(list, comp);

		for (Entry<Integer, Student> entry : list) {
			System.out.println(entry.getKey() + "  :  " + entry.getValue());
		}
	}

//	Sorting using streams API
	static void sortByStudent(Map<Integer, Student> map) {
		ArrayList<Entry<Integer, Student>> list = new ArrayList<>(map.entrySet());

		list.stream().sorted((o1, o2) -> o1.getValue().getStdName().compareTo(o2.getValue().getStdName()))
				.forEach(System.out::println);

	}
}
